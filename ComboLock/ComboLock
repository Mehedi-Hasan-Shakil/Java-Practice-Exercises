public class ComboLock {
    private static final int MAX_NUMBER = 39;
    int currentPosition;
    private int secret1;
    private int secret2;
    private int secret3;
    Boolean position1 = false, position2 = false, position3 = false;
    Boolean isFirstTurnToRight = true;

    public ComboLock(int secret1, int secret2, int secret3) {
        this.secret1 = secret1;
        this.secret2 = secret2;
        this.secret3 = secret3;
    }

    public void reset() {
        currentPosition = 0;
    }

    public void turnRight(int ticks) {
        if (isFirstTurnToRight) {
            currentPosition = ticks;
            if (currentPosition == secret1) {
                position1 = true;
            }
            isFirstTurnToRight = false;
        } else {
            if (currentPosition + ticks > MAX_NUMBER) {
                currentPosition = (MAX_NUMBER + currentPosition) % 40;
                if (currentPosition == secret3) position3 = true;
            } else {
                currentPosition += ticks;
                if (currentPosition == secret3) position3 = true;
            }
        }
    }

    public void turnLeft(int ticks) {
        if (currentPosition < ticks) {
            currentPosition = 40 - (ticks - currentPosition);
            if (currentPosition == secret2)
                position2 = true;
        } else {
            currentPosition -= ticks;
            if (currentPosition == secret2)
                position2 = true;
        }
    }

    public boolean open() {
        if (position1 && position2 && position3) {
            return true;
        } else {
            return false;
        }
    }
}
