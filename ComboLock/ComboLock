public class ComboLock {
    private static final int MAX_NUMBER = 39;
    private int secrete1;
    private int secrete2;
    private int secrete3;
    private int ticks;
    private int currentPosition;
    boolean position1, position2, position3 = false;
    boolean firstTurnToRight = true;

    public ComboLock(int secrete1, int secrete2, int secrete3) {
        this.secrete1 = secrete1;
        this.secrete2 = secrete2;
        this.secrete3 = secrete3;
    }

    public void reset() {
        ticks = 0;
        currentPosition = 0;
    }

    public void turnLeft(int ticks) {
        if (currentPosition - ticks < 0) {
            currentPosition = MAX_NUMBER - (ticks - currentPosition) + 2;
        } else {
            currentPosition = currentPosition - ticks;
        }
        if (currentPosition == secrete2) {
            position2 = true;
        }
    }

    public void turnRight(int ticks) {
        if (!position1 && firstTurnToRight) {
            currentPosition = ticks;
            if (currentPosition == secrete1) {
                position1 = true;
            }
            firstTurnToRight = false;
        } else {
            currentPosition = currentPosition + ticks - (MAX_NUMBER + 2);
            if (currentPosition == secrete3) {
                position3 = true;
            }
        }
    }

    public boolean open() {
        return position1 && position2 && position3;
    }
}
